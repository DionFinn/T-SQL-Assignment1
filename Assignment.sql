

CREATE DATABASE tAssignment

IF OBJECT_ID('Sale') IS NOT NULL
DROP TABLE SALE;

IF OBJECT_ID('Product') IS NOT NULL
DROP TABLE PRODUCT;

IF OBJECT_ID('Customer') IS NOT NULL
DROP TABLE CUSTOMER;

IF OBJECT_ID('Location') IS NOT NULL
DROP TABLE LOCATION;

GO

CREATE TABLE CUSTOMER (
    CUSTID INT, 
    CUSTNAMEN VARCHAR(100), 
    SALES_YTD MONEY, 
    STATUS NVARCHAR(7), 
    PRIMARY KEY(CUSTID));

CREATE TABLE PRODUCT 
    (PRODID INT, 
    PRODNAME NVARCHAR(100), 
    SELLING_PRICE MONEY, 
    SALES_YTD MONEY , 
    PRIMARY KEY(PRODID));

CREATE TABLE SALE(
    PRODID INT, 
    PRODNAME NVARCHAR(100), 
    SELLING_PRICE MONEY, 
    SALES_YTD MONEY, 
    PRIMARY KEY(PRODID));

CREATE TABLE [LOCATION](
    LOCID NVARCHAR(5), 
    MINQTY INTEGER,
    MAXQTY INTEGER, 
    PRIMARY KEY (LOCID),
    CONSTRAINT CHECK_LOCID_LENGTH CHECK (LEN(LOCID) = 5),
    CONSTRAINT CHECK_MINQTY_RANGE CHECK (MINQTY BETWEEN 0 AND 999), 
    CONSTRAINT CHECK_MAXQTY_RANGE CHECK (MAXQTY BETWEEN 0 AND 999), 
    CONSTRAINT CHECK_MAXQTY_GREATER_MIXQTY CHECK (MAXQTY >= MINQTY)
);

IF OBJECT_ID('SALE_SEQ') IS NOT NULL
DROP SEQUENCE SALE_SEQ;
CREATE SEQUENCE SALE_SEQ;

GO

IF OBJECT_ID('ADD_CUSTOMER') IS NOT NULL 
DROP PROCEDURE ADD_CUSTOMER;
GO

CREATE PROCEDURE ADD_CUSTOMER @pcustname NVARCHAR(100), @pcustid INT AS
BEGIN 
    BEGIN TRY 
    
    IF @pcustid < 1 OR @pcustid > 499 
    THROW 50020, 'Customer ID out of range.', 1

    INSERT INTO CUSTOMER(CUSTID, CUSTNAMEN, SALES_YTD, [STATUS])
        VALUES (@pcustid, @pcustname, 0, 'OK');

    END TRY 
    BEGIN CATCH 
    IF ERROR_NUMBER() = 2627
    THROW 50010, 'Duplicate Customer ID', 1 
    ELSE IF ERROR_NUMBER() = 50020
        THROW 
    ELSE 
    BEGIN 
        DECLARE @ERRORMESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
        THROW 50000, @ERRORMESSAGE, 1
        END; 
    END CATCH;
END; 

GO 

EXEC ADD_CUSTOMER 'DION', 231;

GO 

CREATE PROCEDURE DELETE_ALL_CUSTOMER AS
BEGIN TRY 
    DELETE CUSTOMER
    WHERE CUSTOMER.CUSTID = CUSTID
    RETURN @@ROWCOUNT
END TRY 
BEGIN CATCH 
    IF ERROR_NUMBER() = ERROR_NUMBER()
    THROW 50000, 'Use value of error_message()', 1 
END CATCH;

GO 



CREATE PROCEDURE ADD_PRODUCT @pprodid INT, @pprodname NVARCHAR(100), @pprice MONEY AS
BEGIN 
    
    IF @pprodid  < 1000 OR @pprodid > 2500
    THROW 50040, 'Product ID out of range', 1

    IF @pprice < 0 or @pprice > 999.99
    throw 50050, 'Price out of range', 1 
END TRY
BEGIN CATCH

    IF ERROR_NUMBER() = 2627
    THROW 50030, 'Duplicate productID', 1 
    
    ELSE IF ERROR_MESSAGE() = ERROR_MESSAGE()
    THROW 50000, 'Use Value of error_message()' 
END CATCH; 
    


END;